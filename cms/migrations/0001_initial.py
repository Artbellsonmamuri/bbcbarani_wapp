# Generated by Django 4.2.24 on 2025-09-06 13:54

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=False, help_text='Check to make this content visible on the website')),
                ('excerpt', models.TextField(blank=True, help_text='Short summary for listings')),
                ('content', models.TextField(help_text='Full post content (supports HTML)')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='posts/')),
                ('is_featured', models.BooleanField(default=False, help_text='Feature on homepage')),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=200)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=False, help_text='Check to make this content visible on the website')),
                ('content', models.TextField(help_text='Page content (supports HTML)')),
                ('meta_description', models.CharField(blank=True, help_text='SEO description', max_length=160)),
                ('show_in_navigation', models.BooleanField(default=True, help_text='Show in main navigation menu')),
                ('navigation_order', models.PositiveIntegerField(default=100, help_text='Order in navigation (lower = first)')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='pages/')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['navigation_order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Ministry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=False, help_text='Check to make this content visible on the website')),
                ('description', models.TextField(help_text='Ministry description (supports HTML)')),
                ('leader_name', models.CharField(blank=True, max_length=100)),
                ('leader_title', models.CharField(blank=True, help_text='e.g., Pastor, Director', max_length=100)),
                ('leader_email', models.EmailField(blank=True, max_length=254)),
                ('leader_phone', models.CharField(blank=True, max_length=20)),
                ('meeting_time', models.CharField(blank=True, help_text='When does this ministry meet?', max_length=200)),
                ('meeting_location', models.CharField(blank=True, max_length=200)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='ministries/')),
                ('is_active', models.BooleanField(default=True)),
                ('target_audience', models.CharField(blank=True, help_text='e.g., Adults, Youth, Children', max_length=100)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Ministries',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='MediaAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='media_assets/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'jpg', 'jpeg', 'png', 'gif', 'mp3', 'mp4', 'mov'])])),
                ('file_type', models.CharField(choices=[('image', 'Image'), ('document', 'Document'), ('audio', 'Audio'), ('video', 'Video'), ('other', 'Other')], default='other', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Homepage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=False, help_text='Check to make this content visible on the website')),
                ('hero_title', models.CharField(help_text='Large hero title', max_length=200)),
                ('hero_subtitle', models.CharField(blank=True, help_text='Subtitle under hero', max_length=300)),
                ('hero_image', models.ImageField(blank=True, null=True, upload_to='homepage/')),
                ('welcome_text', models.TextField(help_text='Main welcome message (supports HTML)')),
                ('service_times', models.TextField(blank=True, help_text='Service times and info')),
                ('featured_verse', models.TextField(blank=True, help_text='Bible verse for homepage')),
                ('featured_verse_reference', models.CharField(blank=True, max_length=100)),
                ('call_to_action_text', models.CharField(blank=True, max_length=200)),
                ('call_to_action_url', models.CharField(blank=True, max_length=200)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Homepage Content',
                'verbose_name_plural': 'Homepage Content',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=False, help_text='Check to make this content visible on the website')),
                ('description', models.TextField(help_text='Event description (supports HTML)')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('address', models.TextField(blank=True)),
                ('contact_person', models.CharField(blank=True, max_length=100)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='events/')),
                ('registration_required', models.BooleanField(default=False)),
                ('registration_url', models.URLField(blank=True)),
                ('max_attendees', models.PositiveIntegerField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
    ]
